worker_processes auto;

events {
    worker_connections 1024;
}

http {
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;

    server_tokens off;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";
    add_header Access-Control-Allow-Origin "https://nfv.pp.ua" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";

    keepalive_requests 100;

    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 2m;
    large_client_header_buffers 2 1k;

    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_timeout 5 5;
    send_timeout 10;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:20m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:20m rate=20r/s;
    limit_conn conn_limit_per_ip 25;

    log_format suspicious '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent"';
    access_log /var/log/nginx/suspicious.log suspicious;

    server {
        listen 443 ssl;
        server_name nfv.pp.ua www.nfv.pp.ua;

        ssl_certificate /etc/nginx/certs/selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/selfsigned.key;
        ssl_dhparam /etc/nginx/certs/dhparam.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        server_tokens off;

        if ($http_user_agent ~* (wget|curl|python|nikto|scan|nmap|sqlmap|fuzz|perl|java)) {
            return 403;
        }

        if ($host !~* ^(nfv\.pp\.ua|www\.nfv\.pp\.ua)$) {
            return 405;
        }
        if ($server_name !~* ^(nfv\.pp\.ua|www\.nfv\.pp\.ua)$) {
            return 406;
        }
        if ($http_x_forwarded_for ~* "169\.254\.169\.254") {
            return 407;
        }
        if ($http_x_real_ip ~* "169\.254\.169\.254") {
            return 408;
        }
        
#        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff2|woff|ttf|eot|svg)$ {
#            expires 7d;
#            add_header Cache-Control "public, max-age=604800";
#        }

        location ~ /\.ht {
            deny all;
        }

        location ~* \.(bak|old|sql|log|config|ini|swp|tmp)$ {
            deny all;
        }

        location / {
            set $block 0;
            if ($host ~* "169\.254\.169\.254") {
                set $block 1;
            }
            if ($http_host ~* "169\.254\.169\.254") {
                set $block 1;
            }
            if ($block = 1) {
                return 409;
            }

            proxy_pass http://frontend:5173/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $server_name;
            proxy_cache_bypass $http_upgrade;
            
            limit_req zone=req_limit_per_ip burst=20;

            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
        }

        location /api {
            proxy_pass http://backend:8888/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $server_name;
            proxy_cache_bypass $http_upgrade;

#            if ($request_method !~ ^(GET|POST|OPTIONS)$) {
#                return 405;
#            }

            limit_req zone=req_limit_per_ip burst=20;

            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $server_name;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_redirect http:// https://;
            sub_filter '"/' '"/grafana/';
            sub_filter_once off;

            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
            add_header Content-Security-Policy "default-src 'self'";
        }

        location /prometheus/ {
            proxy_pass http://monitoring:9090/;
            proxy_set_header Host $server_name;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            rewrite ^/prometheus(/.*)$ /prometheus$1 break;

            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
            add_header Content-Security-Policy "default-src 'self'";
        }

        error_page 404 /custom_404.html;
        location = /custom_404.html {
            root /usr/share/nginx/html;
            internal;
        }

        error_page 500 502 503 504 /custom_50x.html;
        location = /custom_50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    server {
        listen 80;
        server_name nfv.pp.ua www.nfv.pp.ua;
        return 301 https://$host$request_uri;
    }
}

